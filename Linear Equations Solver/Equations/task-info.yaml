type: edu
custom_name: stage3
files:
- name: src/solver/Main.java
  visible: true
  text: |
    package solver;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/SolverTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.TestCase;
    import solver.Main;

    import java.nio.file.FileSystemException;
    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.List;

    import static java.lang.Math.abs;
    import static org.hyperskill.hstest.common.FileUtils.readFile;


    class TestClue {

        String feedback;
        String outFile;
        ArrayList<Double> answers;

        TestClue(String feedback, String outFile, Double[] answers) {
            this.feedback = feedback;
            this.outFile = outFile;
            this.answers = new ArrayList<>(Arrays.asList(answers));
        }
    }


    public class SolverTest extends StageTest<TestClue> {

        public SolverTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<TestCase<TestClue>> generate() {
            return List.of(
                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "Test exactly like in the example",
                        "out.txt",
                        new Double[]{1d, 2d, 3d}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "out.txt"})
                    .addFile("in.txt",
                    "3\n" +
                        "1 1 2 9\n" +
                        "2 4 -3 1\n" +
                        "3 6 -5 0"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "",
                        "out.txt",
                        new Double[]{1d, 1d}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "out.txt"})
                    .addFile("in.txt",
                    "2\n" +
                        "1 0 1\n" +
                        "0 1 1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "Check if you process \"-in\" argument from command line",
                        "out.txt",
                        new Double[]{1d, 1d}))
                    .addArguments(new String[]{"-in", "input.txt", "-out", "out.txt"})
                    .addFile("input.txt",
                    "2\n" +
                        "1 0 1\n" +
                        "0 1 1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "Check if you process \"-out\" argument from command line",
                        "output.txt",
                        new Double[]{1d, 1d}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "output.txt"})
                    .addFile("in.txt",
                    "2\n" +
                        "1 0 1\n" +
                        "0 1 1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "",
                        "out.txt",
                        new Double[]{2d, 2d}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "out.txt"})
                    .addFile("in.txt",
                    "2\n" +
                        "1 0 2\n" +
                        "0 1 2"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "",
                        "out.txt",
                        new Double[]{1d, 1d}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "out.txt"})
                    .addFile("in.txt",
                    "2\n" +
                        "2 0 2\n" +
                        "0 2 2"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "",
                        "out.txt",
                        new Double[]{-1d, 1d}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "out.txt"})
                    .addFile("in.txt",
                    "2\n" +
                        "1 2 1\n" +
                        "3 4 1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "This test is a system of 20 linear equations",
                        "out.txt",
                        new Double[]{
                            0.5428d,
                            -2.3923d,
                            1.5789d,
                            -1.3679d,
                            0.6433d,
                            -1.7531d,
                            -0.0432d,
                            -0.7503d,
                            -0.8245d,
                            -0.4562d,
                            -1.2163d,
                            0.3093d,
                            -0.1105d,
                            1.1717d,
                            -0.5873d,
                            -1.3933d,
                            1.1229d,
                            3.0693d,
                            1.1995d,
                            1.5399}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "out.txt"})
                    .addFile("in.txt",
                    "20\n" +
                        "26 90 17 67 68 9 60 38 37 38 76 14 33 94 88 58 99 84 9 45 18\n" +
                        "37 34 20 53 10 61 75 49 91 84 55 84 84 81 30 22 42 76 33 27 2\n" +
                        "99 69 63 57 39 45 33 43 99 26 25 24 80 91 62 90 54 77 88 32 94\n" +
                        "37 40 14 5 47 30 5 21 36 77 57 38 29 3 61 12 81 19 39 56 9\n" +
                        "36 73 71 39 9 9 31 10 84 7 13 45 9 34 2 14 88 43 17 4 86\n" +
                        "31 29 76 89 26 35 11 55 37 5 41 96 19 18 100 20 21 49 83 5 20\n" +
                        "18 18 25 70 79 74 30 66 41 93 63 2 90 4 46 1 77 89 21 47 52\n" +
                        "32 62 27 80 57 10 35 44 97 18 58 19 5 81 33 54 83 66 25 75 75\n" +
                        "56 53 13 91 30 11 72 52 13 86 73 88 94 20 25 77 90 75 73 52 36\n" +
                        "63 9 40 40 35 90 55 92 12 98 34 37 64 21 67 91 15 65 82 87 30\n" +
                        "71 5 65 64 6 20 9 81 40 56 39 93 74 55 83 81 74 2 58 86 58\n" +
                        "13 50 31 86 73 36 83 27 37 96 37 28 75 91 15 78 90 56 57 18 18\n" +
                        "34 9 51 11 92 54 25 91 61 69 37 37 89 91 95 50 10 16 69 71 66\n" +
                        "25 16 79 36 6 28 51 100 5 28 97 23 44 32 50 2 96 18 5 48 44\n" +
                        "80 38 47 96 41 72 85 79 2 3 96 14 2 65 97 38 76 73 88 59 89\n" +
                        "31 98 88 52 49 68 46 79 26 30 31 76 84 87 27 16 66 55 78 2 46\n" +
                        "57 2 32 78 70 7 95 56 77 97 49 14 74 7 85 48 83 59 71 5 44\n" +
                        "4 64 4 43 54 99 77 7 72 82 27 22 29 94 53 48 65 88 26 86 42\n" +
                        "69 59 62 63 42 29 73 18 82 78 48 60 84 73 84 9 82 53 14 1 12\n" +
                        "98 2 47 62 69 11 28 14 83 32 94 24 71 1 16 91 53 50 38 26 17"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        "This test is a system of 20 linear equations",
                        "out.txt",
                        new Double[]{
                            0.2182d,
                            0.3886d,
                            0.2337d,
                            0.5804d,
                            -0.1867d,
                            0.3536d,
                            -0.5597d,
                            -0.4706d,
                            -0.3946d,
                            -0.4577d,
                            0.371d,
                            -0.1959d,
                            1.1403d,
                            0.2808d,
                            -0.8712d,
                            -0.3355d,
                            -0.1309d,
                            -0.3008d,
                            0.6355d,
                            0.4716d}))
                    .addArguments(new String[]{"-in", "in.txt", "-out", "out.txt"})
                    .addFile("in.txt",
                    "20\n" +
                        "0.11 0.62 0.28 0.94 0.53 0.94 0.06 1.0 0.61 0.45 0.03 0.79 0.87 0.32 0.66 0.5 0.14 0.82 0.44 0.13 0.43\n" +
                        "0.8 0.7 0.16 0.09 0.4 0.63 0.46 1.0 0.9 0.14 0.03 0.8 0.98 0.71 0.67 0.42 0.73 0.01 0.75 0.59 0.64\n" +
                        "0.99 0.01 0.45 0.85 0.17 0.14 0.58 0.27 0.96 0.52 0.74 0.89 0.72 0.93 0.22 0.9 0.41 0.78 0.56 0.67 0.84\n" +
                        "0.19 0.35 0.98 0.28 0.74 0.42 0.82 0.51 0.33 0.84 0.85 0.46 0.71 0.93 0.11 0.88 0.08 0.72 0.68 0.73 0.82\n" +
                        "0.59 0.52 0.17 0.62 0.9 0.66 0.23 0.47 0.29 0.78 0.43 0.99 0.67 0.63 0.38 0.85 0.72 0.6 0.97 0.75 0.96\n" +
                        "0.66 0.24 0.9 0.43 0.39 0.31 0.64 0.17 0.75 0.62 0.38 0.38 0.41 0.38 0.41 0.9 0.29 0.21 0.54 0.87 0.35\n" +
                        "0.06 0.57 0.04 0.74 0.27 0.75 0.0 0.52 0.42 0.85 0.35 0.19 0.57 0.42 0.93 0.77 0.09 0.4 0.83 0.39 0.46\n" +
                        "0.87 0.77 0.71 0.61 0.73 0.28 0.02 0.96 0.29 0.37 0.27 0.43 0.02 0.82 0.16 0.34 0.49 0.9 0.35 0.11 0.18\n" +
                        "0.87 0.7 0.4 0.27 0.35 0.57 0.36 0.89 0.09 0.78 0.64 0.84 0.06 0.69 0.41 0.4 0.64 0.55 0.81 0.69 0.27\n" +
                        "0.34 0.49 0.27 1.0 0.78 0.01 0.58 0.87 0.47 0.27 0.23 0.35 0.55 0.06 0.67 0.74 0.17 0.68 0.75 0.76 0.16\n" +
                        "0.38 0.71 0.29 0.94 0.84 0.46 0.98 0.0 0.89 0.58 0.09 0.04 0.04 0.66 0.21 0.58 0.8 0.96 0.78 0.67 0.11\n" +
                        "0.36 0.37 0.1 0.36 0.46 0.15 0.99 0.38 0.39 0.52 0.76 0.68 0.94 0.31 0.21 0.99 0.78 0.17 0.15 0.06 0.06\n" +
                        "0.94 0.3 0.35 0.24 0.79 0.86 0.7 0.81 0.2 0.23 0.52 0.91 0.55 0.21 0.47 0.44 0.1 0.97 0.61 0.13 0.03\n" +
                        "0.03 0.28 0.32 0.06 0.54 0.08 1.0 0.69 0.29 0.48 0.84 0.37 0.74 0.13 0.2 0.75 0.46 0.03 0.68 0.72 0.33\n" +
                        "0.43 0.78 0.69 0.91 0.8 0.68 0.46 0.9 0.65 0.19 0.81 0.28 0.3 0.75 0.94 0.05 0.65 0.29 0.61 0.74 0.68\n" +
                        "0.01 0.46 0.38 0.72 0.97 0.39 0.88 0.62 0.93 0.26 0.58 0.02 0.95 0.49 0.69 0.64 0.47 0.53 0.43 0.1 0.09\n" +
                        "0.83 0.72 0.84 0.41 0.53 0.53 0.67 0.09 0.49 0.42 0.88 0.14 0.09 0.02 0.49 0.29 0.29 0.17 0.08 0.9 0.45\n" +
                        "0.54 0.57 0.53 0.23 0.78 0.89 0.24 0.98 0.7 0.75 0.46 0.85 0.39 0.58 0.36 0.29 0.54 0.83 0.97 0.62 0.34\n" +
                        "0.3 0.64 0.71 0.07 0.03 0.76 0.25 0.34 0.97 0.93 0.48 0.57 0.98 0.33 0.4 0.18 0.01 0.81 0.38 0.87 0.95\n" +
                        "0.25 0.7 0.07 0.4 0.67 0.84 0.12 0.43 0.61 0.7 0.89 0.88 0.48 0.14 0.32 0.98 0.15 0.87 0.34 0.81 0.37")
            );
        }

        @Override
        public CheckResult check(String reply, TestClue clue) {
            try {
                reply = readFile(clue.outFile);

                double[] actual =
                    Arrays
                        .stream(reply.split("\n"))
                        .map(String::strip)
                        .mapToDouble(Double::parseDouble)
                        .toArray();

                double[] expected =
                    clue.answers.stream()
                        .mapToDouble(e -> e)
                        .toArray();

                if (actual.length != expected.length) {
                    return new CheckResult(false, clue.feedback);
                }

                for (int i = 0; i < actual.length; i++) {
                    if (abs(actual[i] - expected[i]) > 0.001) {
                        return new CheckResult(false, clue.feedback);
                    }
                }

                return CheckResult.correct();
            }
            catch (NumberFormatException ex) {
                return new CheckResult(false,
                    "Numbers should be written in file on " +
                            "separate lines without any additional symbols");
            }
        }
    }
  learner_created: false
- name: src/solver/Matrix.java
  visible: true
  learner_created: true
- name: out.txt
  visible: true
  learner_created: true
- name: output.txt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/40/stages/211/implement
status: Failed
feedback:
  message: |-
    Wrong answer in test #8

    This test is a system of 20 linear equations

    Please find below the output of your program during this failed test.

    ---

    Arguments: -in in.txt -out out.txt

    Start solving the equation.
    0.04 * R1 -&gt; R1
    37.00 * R1 - R2 -&gt; R2
    99.00 * R1 - R3 -&gt; R3
    37.00 * R1 - R4 -&gt; R4
    36.00 * R1 - R5 -&gt; R5
    31.00 * R1 - R6 -&gt; R6
    18.00 * R1 - R7 -&gt; R7
    32.00 * R1 - R8 -&gt; R8
    56.00 * R1 - R9 -&gt; R9
    63.00 * R1 - R10 -&gt; R10
    71.00 * R1 - R11 -&gt; R11
    13.00 * R1 - R12 -&gt; R12
    34.00 * R1 - R13 -&gt; R13
    25.00 * R1 - R14 -&gt; R14
    80.00 * R1 - R15 -&gt; R15
    31.00 * R1 - R16 -&gt; R16
    57.00 * R1 - R17 -&gt; R17
    4.00 * R1 - R18 -&gt; R18
    69.00 * R1 - R19 -&gt; R19
    98.00 * R1 - R20 -&gt; R20
    -0.01 * R2 -&gt; R2
    -273.69 * R2 - R3 -&gt; R3
    -88.08 * R2 - R4 -&gt; R4
    -51.62 * R2 - R5 -&gt; R5
    -78.31 * R2 - R6 -&gt; R6
    -44.31 * R2 - R7 -&gt; R7
    -48.77 * R2 - R8 -&gt; R8
    -140.85 * R2 - R9 -&gt; R9
    -209.08 * R2 - R10 -&gt; R10
    -240.77 * R2 - R11 -&gt; R11
    5.00 * R2 - R12 -&gt; R12
    -108.69 * R2 - R13 -&gt; R13
    -70.54 * R2 - R14 -&gt; R14
    -238.92 * R2 - R15 -&gt; R15
    -9.31 * R2 - R16 -&gt; R16
    -195.31 * R2 - R17 -&gt; R17
    50.15 * R2 - R18 -&gt; R18
    -179.85 * R2 - R19 -&gt; R19
    -337.23 * R2 - R20 -&gt; R20
    0.10 * R3 -&gt; R3
    -6.27 * R3 - R4 -&gt; R4
    49.76 * R3 - R5 -&gt; R5
    59.22 * R3 - R6 -&gt; R6
    15.21 * R3 - R7 -&gt; R7
    8.25 * R3 - R8 -&gt; R8
    -17.34 * R3 - R9 -&gt; R9
    8.12 * R3 - R10 -&gt; R10
    29.31 * R3 - R11 -&gt; R11
    22.28 * R3 - R12 -&gt; R12
    33.61 * R3 - R13 -&gt; R13
    65.80 * R3 - R14 -&gt; R14
    5.34 * R3 - R15 -&gt; R15
    68.15 * R3 - R16 -&gt; R16
    3.43 * R3 - R17 -&gt; R17
    -0.85 * R3 - R18 -&gt; R18
    24.90 * R3 - R19 -&gt; R19
    -2.05 * R3 - R20 -&gt; R20
    -0.01 * R4 -&gt; R4
    325.69 * R4 - R5 -&gt; R5
    468.30 * R4 - R6 -&gt; R6
    152.41 * R4 - R7 -&gt; R7
    78.55 * R4 - R8 -&gt; R8
    -114.03 * R4 - R9 -&gt; R9
    29.93 * R4 - R10 -&gt; R10
    199.21 * R4 - R11 -&gt; R11
    209.72 * R4 - R12 -&gt; R12
    212.93 * R4 - R13 -&gt; R13
    474.35 * R4 - R14 -&gt; R14
    35.61 * R4 - R15 -&gt; R15
    464.14 * R4 - R16 -&gt; R16
    43.61 * R4 - R17 -&gt; R17
    4.03 * R4 - R18 -&gt; R18
    144.39 * R4 - R19 -&gt; R19
    -53.41 * R4 - R20 -&gt; R20
    -0.05 * R5 -&gt; R5
    82.78 * R5 - R6 -&gt; R6
    106.79 * R5 - R7 -&gt; R7
    34.53 * R5 - R8 -&gt; R8
    6.53 * R5 - R9 -&gt; R9
    53.78 * R5 - R10 -&gt; R10
    57.51 * R5 - R11 -&gt; R11
    76.97 * R5 - R12 -&gt; R12
    112.40 * R5 - R13 -&gt; R13
    54.10 * R5 - R14 -&gt; R14
    54.53 * R5 - R15 -&gt; R15
    12.20 * R5 - R16 -&gt; R16
    113.64 * R5 - R17 -&gt; R17
    2.07 * R5 - R18 -&gt; R18
    27.03 * R5 - R19 -&gt; R19
    101.63 * R5 - R20 -&gt; R20
    0.00 * R6 -&gt; R6
    1368.55 * R6 - R7 -&gt; R7
    410.79 * R6 - R8 -&gt; R8
    -89.52 * R6 - R9 -&gt; R9
    685.07 * R6 - R10 -&gt; R10
    716.88 * R6 - R11 -&gt; R11
    1017.76 * R6 - R12 -&gt; R12
    1539.52 * R6 - R13 -&gt; R13
    934.19 * R6 - R14 -&gt; R14
    614.31 * R6 - R15 -&gt; R15
    532.27 * R6 - R16 -&gt; R16
    1268.76 * R6 - R17 -&gt; R17
    133.60 * R6 - R18 -&gt; R18
    391.59 * R6 - R19 -&gt; R19
    1078.48 * R6 - R20 -&gt; R20
    0.05 * R7 -&gt; R7
    -4.28 * R7 - R8 -&gt; R8
    0.82 * R7 - R9 -&gt; R9
    38.74 * R7 - R10 -&gt; R10
    23.96 * R7 - R11 -&gt; R11
    52.34 * R7 - R12 -&gt; R12
    107.18 * R7 - R13 -&gt; R13
    72.88 * R7 - R14 -&gt; R14
    30.38 * R7 - R15 -&gt; R15
    -5.70 * R7 - R16 -&gt; R16
    141.13 * R7 - R17 -&gt; R17
    -25.56 * R7 - R18 -&gt; R18
    55.83 * R7 - R19 -&gt; R19
    97.69 * R7 - R20 -&gt; R20
    -0.22 * R8 -&gt; R8
    6.52 * R8 - R9 -&gt; R9
    58.97 * R8 - R10 -&gt; R10
    64.92 * R8 - R11 -&gt; R11
    4.48 * R8 - R12 -&gt; R12
    130.52 * R8 - R13 -&gt; R13
    135.30 * R8 - R14 -&gt; R14
    24.55 * R8 - R15 -&gt; R15
    26.02 * R8 - R16 -&gt; R16
    117.08 * R8 - R17 -&gt; R17
    -83.13 * R8 - R18 -&gt; R18
    22.84 * R8 - R19 -&gt; R19
    46.45 * R8 - R20 -&gt; R20
    0.01 * R9 -&gt; R9
    975.84 * R9 - R10 -&gt; R10
    1186.49 * R9 - R11 -&gt; R11
    28.17 * R9 - R12 -&gt; R12
    2349.67 * R9 - R13 -&gt; R13
    2375.77 * R9 - R14 -&gt; R14
    332.53 * R9 - R15 -&gt; R15
    392.30 * R9 - R16 -&gt; R16
    2098.85 * R9 - R17 -&gt; R17
    -1552.77 * R9 - R18 -&gt; R18
    359.85 * R9 - R19 -&gt; R19
    836.56 * R9 - R20 -&gt; R20
    -0.00 * R10 -&gt; R10
    -1570.61 * R10 - R11 -&gt; R11
    115.01 * R10 - R12 -&gt; R12
    -3270.91 * R10 - R13 -&gt; R13
    -3317.39 * R10 - R14 -&gt; R14
    -455.83 * R10 - R15 -&gt; R15
    -716.73 * R10 - R16 -&gt; R16
    -2605.50 * R10 - R17 -&gt; R17
    2071.82 * R10 - R18 -&gt; R18
    -326.11 * R10 - R19 -&gt; R19
    -893.73 * R10 - R20 -&gt; R20
    0.09 * R11 -&gt; R11
    57.10 * R11 - R12 -&gt; R12
    101.66 * R11 - R13 -&gt; R13
    116.88 * R11 - R14 -&gt; R14
    104.15 * R11 - R15 -&gt; R15
    -89.04 * R11 - R16 -&gt; R16
    224.39 * R11 - R17 -&gt; R17
    -55.62 * R11 - R18 -&gt; R18
    113.79 * R11 - R19 -&gt; R19
    278.20 * R11 - R20 -&gt; R20
    0.00 * R12 -&gt; R12
    463.08 * R12 - R13 -&gt; R13
    225.64 * R12 - R14 -&gt; R14
    261.10 * R12 - R15 -&gt; R15
    -271.89 * R12 - R16 -&gt; R16
    858.08 * R12 - R17 -&gt; R17
    -107.95 * R12 - R18 -&gt; R18
    432.24 * R12 - R19 -&gt; R19
    945.04 * R12 - R20 -&gt; R20
    0.01 * R13 -&gt; R13
    -551.04 * R13 - R14 -&gt; R14
    -656.02 * R13 - R15 -&gt; R15
    439.75 * R13 - R16 -&gt; R16
    -398.64 * R13 - R17 -&gt; R17
    150.45 * R13 - R18 -&gt; R18
    -265.30 * R13 - R19 -&gt; R19
    -846.65 * R13 - R20 -&gt; R20
    -0.00 * R14 -&gt; R14
    -1463.60 * R14 - R15 -&gt; R15
    937.59 * R14 - R16 -&gt; R16
    -1284.66 * R14 - R17 -&gt; R17
    516.38 * R14 - R18 -&gt; R18
    -689.54 * R14 - R19 -&gt; R19
    -2253.27 * R14 - R20 -&gt; R20
    0.08 * R15 -&gt; R15
    -192.65 * R15 - R16 -&gt; R16
    278.41 * R15 - R17 -&gt; R17
    -25.86 * R15 - R18 -&gt; R18
    105.09 * R15 - R19 -&gt; R19
    114.42 * R15 - R20 -&gt; R20
    -0.00 * R16 -&gt; R16
    1815.67 * R16 - R17 -&gt; R17
    -145.89 * R16 - R18 -&gt; R18
    644.15 * R16 - R19 -&gt; R19
    796.22 * R16 - R20 -&gt; R20
    -0.02 * R17 -&gt; R17
    93.96 * R17 - R18 -&gt; R18
    -91.50 * R17 - R19 -&gt; R19
    66.60 * R17 - R20 -&gt; R20
    -0.01 * R18 -&gt; R18
    55.39 * R18 - R19 -&gt; R19
    -9.48 * R18 - R20 -&gt; R20
    -0.01 * R19 -&gt; R19
    -94.30 * R19 - R20 -&gt; R20
    -0.01 * R20 -&gt; R20
    -1.33 * R20 - R19 -&gt; R19
    0.54 * R20 - R18 -&gt; R18
    1.68 * R20 - R17 -&gt; R17
    -0.42 * R20 - R16 -&gt; R16
    2.79 * R20 - R15 -&gt; R15
    0.04 * R20 - R14 -&gt; R14
    -0.66 * R20 - R13 -&gt; R13
    1.27 * R20 - R12 -&gt; R12
    -6.34 * R20 - R11 -&gt; R11
    0.45 * R20 - R10 -&gt; R10
    1.29 * R20 - R9 -&gt; R9
    -9.34 * R20 - R8 -&gt; R8
    -1.82 * R20 - R7 -&gt; R7
    0.68 * R20 - R6 -&gt; R6
    -7.47 * R20 - R5 -&gt; R5
    -0.08 * R20 - R4 -&gt; R4
    -3.02 * R20 - R3 -&gt; R3
    0.39 * R20 - R2 -&gt; R2
    1.73 * R20 - R1 -&gt; R1
    -1.84 * R19 - R18 -&gt; R18
    -2.18 * R19 - R17 -&gt; R17
    1.27 * R19 - R16 -&gt; R16
    -9.16 * R19 - R15 -&gt; R15
    -0.18 * R19 - R14 -&gt; R14
    -0.16 * R19 - R13 -&gt; R13
    1.83 * R19 - R12 -&gt; R12
    -6.73 * R19 - R11 -&gt; R11
    0.19 * R19 - R10 -&gt; R10
    -0.01 * R19 - R9 -&gt; R9
    6.71 * R19 - R8 -&gt; R8
    -4.03 * R19 - R7 -&gt; R7
    0.20 * R19 - R6 -&gt; R6
    -1.72 * R19 - R5 -&gt; R5
    -0.04 * R19 - R4 -&gt; R4
    -0.48 * R19 - R3 -&gt; R3
    -0.21 * R19 - R2 -&gt; R2
    0.35 * R19 - R1 -&gt; R1
    0.66 * R18 - R17 -&gt; R17
    0.19 * R18 - R16 -&gt; R16
    -0.86 * R18 - R15 -&gt; R15
    -0.23 * R18 - R14 -&gt; R14
    0.56 * R18 - R13 -&gt; R13
    -0.55 * R18 - R12 -&gt; R12
    1.07 * R18 - R11 -&gt; R11
    -0.24 * R18 - R10 -&gt; R10
    -0.41 * R18 - R9 -&gt; R9
    -0.00 * R18 - R8 -&gt; R8
    2.55 * R18 - R7 -&gt; R7
    0.24 * R18 - R6 -&gt; R6
    -3.35 * R18 - R5 -&gt; R5
    1.35 * R18 - R4 -&gt; R4
    -11.10 * R18 - R3 -&gt; R3
    0.46 * R18 - R2 -&gt; R2
    3.23 * R18 - R1 -&gt; R1
    -1.34 * R17 - R16 -&gt; R16
    8.95 * R17 - R15 -&gt; R15
    0.00 * R17 - R14 -&gt; R14
    0.03 * R17 - R13 -&gt; R13
    -0.80 * R17 - R12 -&gt; R12
    2.15 * R17 - R11 -&gt; R11
    0.97 * R17 - R10 -&gt; R10
    1.87 * R17 - R9 -&gt; R9
    -9.16 * R17 - R8 -&gt; R8
    0.15 * R17 - R7 -&gt; R7
    0.98 * R17 - R6 -&gt; R6
    -11.45 * R17 - R5 -&gt; R5
    -0.12 * R17 - R4 -&gt; R4
    -3.37 * R17 - R3 -&gt; R3
    1.05 * R17 - R2 -&gt; R2
    3.81 * R17 - R1 -&gt; R1
    -6.79 * R16 - R15 -&gt; R15
    0.37 * R16 - R14 -&gt; R14
    -0.90 * R16 - R13 -&gt; R13
    0.71 * R16 - R12 -&gt; R12
    -2.36 * R16 - R11 -&gt; R11
    -0.45 * R16 - R10 -&gt; R10
    -0.76 * R16 - R9 -&gt; R9
    2.94 * R16 - R8 -&gt; R8
    0.78 * R16 - R7 -&gt; R7
    -0.91 * R16 - R6 -&gt; R6
    10.96 * R16 - R5 -&gt; R5
    -0.14 * R16 - R4 -&gt; R4
    4.33 * R16 - R3 -&gt; R3
    0.64 * R16 - R2 -&gt; R2
    2.23 * R16 - R1 -&gt; R1
    0.80 * R15 - R14 -&gt; R14
    -0.82 * R15 - R13 -&gt; R13
    -0.66 * R15 - R12 -&gt; R12
    7.88 * R15 - R11 -&gt; R11
    -0.51 * R15 - R10 -&gt; R10
    -1.75 * R15 - R9 -&gt; R9
    21.42 * R15 - R8 -&gt; R8
    -7.25 * R15 - R7 -&gt; R7
    0.18 * R15 - R6 -&gt; R6
    -0.35 * R15 - R5 -&gt; R5
    -0.29 * R15 - R4 -&gt; R4
    0.38 * R15 - R3 -&gt; R3
    1.01 * R15 - R2 -&gt; R2
    3.38 * R15 - R1 -&gt; R1
    -1.06 * R14 - R13 -&gt; R13
    -1.45 * R14 - R12 -&gt; R12
    10.48 * R14 - R11 -&gt; R11
    -1.12 * R14 - R10 -&gt; R10
    -1.61 * R14 - R9 -&gt; R9
    0.18 * R14 - R8 -&gt; R8
    1.19 * R14 - R7 -&gt; R7
    -0.25 * R14 - R6 -&gt; R6
    1.98 * R14 - R5 -&gt; R5
    1.56 * R14 - R4 -&gt; R4
    -10.84 * R14 - R3 -&gt; R3
    0.56 * R14 - R2 -&gt; R2
    3.62 * R14 - R1 -&gt; R1
    -2.53 * R13 - R12 -&gt; R12
    11.13 * R13 - R11 -&gt; R11
    0.17 * R13 - R10 -&gt; R10
    -0.09 * R13 - R9 -&gt; R9
    3.58 * R13 - R8 -&gt; R8
    2.49 * R13 - R7 -&gt; R7
    0.75 * R13 - R6 -&gt; R6
    -9.71 * R13 - R5 -&gt; R5
    1.51 * R13 - R4 -&gt; R4
    -14.66 * R13 - R3 -&gt; R3
    -0.39 * R13 - R2 -&gt; R2
    1.27 * R13 - R1 -&gt; R1
    -1.78 * R12 - R11 -&gt; R11
    0.89 * R12 - R10 -&gt; R10
    1.14 * R12 - R9 -&gt; R9
    5.27 * R12 - R8 -&gt; R8
    -7.93 * R12 - R7 -&gt; R7
    1.93 * R12 - R6 -&gt; R6
    -23.36 * R12 - R5 -&gt; R5
    1.79 * R12 - R4 -&gt; R4
    -20.61 * R12 - R3 -&gt; R3
    -0.68 * R12 - R2 -&gt; R2
    0.54 * R12 - R1 -&gt; R1
    0.43 * R11 - R10 -&gt; R10
    0.57 * R11 - R9 -&gt; R9
    2.28 * R11 - R8 -&gt; R8
    -3.83 * R11 - R7 -&gt; R7
    1.09 * R11 - R6 -&gt; R6
    -12.41 * R11 - R5 -&gt; R5
    0.70 * R11 - R4 -&gt; R4
    -10.49 * R11 - R3 -&gt; R3
    0.57 * R11 - R2 -&gt; R2
    2.92 * R11 - R1 -&gt; R1
    1.59 * R10 - R9 -&gt; R9
    -2.01 * R10 - R8 -&gt; R8
    -2.31 * R10 - R7 -&gt; R7
    2.16 * R10 - R6 -&gt; R6
    -25.84 * R10 - R5 -&gt; R5
    1.34 * R10 - R4 -&gt; R4
    -19.66 * R10 - R3 -&gt; R3
    -0.32 * R10 - R2 -&gt; R2
    1.46 * R10 - R1 -&gt; R1
    -18.68 * R9 - R8 -&gt; R8
    1.58 * R9 - R7 -&gt; R7
    1.02 * R9 - R6 -&gt; R6
    -13.43 * R9 - R5 -&gt; R5
    1.51 * R9 - R4 -&gt; R4
    -14.66 * R9 - R3 -&gt; R3
    -0.41 * R9 - R2 -&gt; R2
    1.42 * R9 - R1 -&gt; R1
    -0.81 * R8 - R7 -&gt; R7
    0.46 * R8 - R6 -&gt; R6
    -5.37 * R8 - R5 -&gt; R5
    0.84 * R8 - R4 -&gt; R4
    -8.31 * R8 - R3 -&gt; R3
    0.05 * R8 - R2 -&gt; R2
    1.46 * R8 - R1 -&gt; R1
    0.64 * R7 - R6 -&gt; R6
    -8.70 * R7 - R5 -&gt; R5
    1.77 * R7 - R4 -&gt; R4
    -15.79 * R7 - R3 -&gt; R3
    0.11 * R7 - R2 -&gt; R2
    2.31 * R7 - R1 -&gt; R1
    -12.21 * R6 - R5 -&gt; R5
    1.10 * R6 - R4 -&gt; R4
    -12.37 * R6 - R3 -&gt; R3
    -0.51 * R6 - R2 -&gt; R2
    0.35 * R6 - R1 -&gt; R1
    -0.53 * R5 - R4 -&gt; R4
    3.11 * R5 - R3 -&gt; R3
    0.92 * R5 - R2 -&gt; R2
    2.62 * R5 - R1 -&gt; R1
    -7.16 * R4 - R3 -&gt; R3
    0.45 * R4 - R2 -&gt; R2
    2.58 * R4 - R1 -&gt; R1
    0.04 * R3 - R2 -&gt; R2
    0.65 * R3 - R1 -&gt; R1
    3.46 * R2 - R1 -&gt; R1
    The solution is: (0.542821776526762, -2.3922825985616174, 1.578926934509262, -1.3678947771664687, 0.6433030653636074, -1.753103267200887, -0.04324128026591356, -0.7503475351543276, -0.8244865584266824, -0.4561665764343621, -1.2162958191593773, 0.3093022604858257, -0.11050351822849946, 1.171744500569423, -0.5872949333823545, -1.393311835224773, 1.1229328991804892, 3.069345410455943, 1.1994857698862837, 1.5398839412090333)
    Saved to file out.txt
  time: Fri, 14 Aug 2020 06:53:41 UTC
record: -1
